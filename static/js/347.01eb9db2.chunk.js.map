{"version":3,"file":"static/js/347.01eb9db2.chunk.js","mappings":"wMACA,EAA4B,kCAA5B,EAA2E,mC,SCE9DA,EAAiB,WAC5B,OAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eASA,OACE,kBAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfL,EAAgB,CAAEM,MAAOF,EAAKG,SAASD,MAAME,QAC7CJ,EAAKK,OACN,EAGC,WACE,kBAAOC,UAAWC,EAAeC,KAAK,OAAOC,KAAK,WAClD,mBAAQH,UAAWC,EAAgBC,KAAK,SAAxC,sBAGL,E,0BClBD,EAAkC,yCCIrBE,EAAkB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIP,UAAWC,EAAf,SACGI,GACCA,EAAWG,KAAI,SAAAC,GAAI,OACjB,0BACG,KACD,SAAC,KAAD,CAASC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA1C,SACGG,EAAKK,UAHDL,EAAKE,GADG,KAU1B,ECGD,EAlBoB,WAClB,OAAgDI,EAAAA,EAAAA,UAAS,IAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KACA,GAAmB5B,EAAAA,EAAAA,MACd6B,GADL,eAC0BC,IAAI,SAQ9B,OALCC,EAAAA,EAAAA,YAAU,WACNF,IACJG,EAAAA,EAAAA,IAAiBH,GAAWI,MAAK,SAAAb,GAAI,OAAIQ,EAAoBR,EAAxB,IAA+Bc,OAAM,SAAAC,GAAK,OAAIA,CAAJ,GAC/E,GAAC,CAACN,KAGD,iCACE,SAAC9B,EAAD,IACC4B,IAAoB,SAACZ,EAAD,CAAiBC,WAAYW,MAGvD,C","sources":["webpack://react-homework-template/./src/components/SearchFilmForm/SearchFilmForm.module.css?521e","components/SearchFilmForm/SearchFilmForm.jsx","webpack://react-homework-template/./src/components/SearchMovieList/SearchMovieList.module.css?1b4a","components/SearchMovieList/SearchMovieList.jsx","pages/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputFilm\":\"SearchFilmForm_inputFilm__ytrh3\",\"buttonForm\":\"SearchFilmForm_buttonForm__Kdg+j\"};","import { useSearchParams } from 'react-router-dom';\nimport css from \"./SearchFilmForm.module.css\"\n\nexport const SearchFilmForm = () => {\n  const [, setSearchParams] = useSearchParams();\n  // const query = searchParams.get(\"query\");\n  const submitSeatch = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={submitSeatch}>\n      <input className={css.inputFilm} type=\"text\" name=\"query\" />\n      <button className={css.buttonForm} type=\"submit\">Search</button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchMovieList\":\"SearchMovieList_searchMovieList__KJ-S+\"};","import PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport css from './SearchMovieList.module.css';\n\nexport const SearchMovieList = ({ listOfFilm }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.searchMovieList}>\n      {listOfFilm &&\n        listOfFilm.map(film => (\n          <li key={film.id}>\n            {' '}\n            <NavLink to={`${film.id}`} state={{ from: location }}>\n              {film.title}\n            </NavLink>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nSearchMovieList.propTypes = {\n  listOfFilm: PropTypes.arrayOf(PropTypes.object).isRequired,\n  };\n","import { SearchFilmForm } from 'components/SearchFilmForm/SearchFilmForm';\nimport { fetchSearchMovie } from 'API/api';\nimport { useState,useEffect } from 'react';\nimport { SearchMovieList } from 'components/SearchMovieList/SearchMovieList';\nimport { useSearchParams } from 'react-router-dom';\n\n const MoviesPage = () => {\n  const [filmListOfSearch, setfilmListOfSearch] = useState('');\n  const [useParam] = useSearchParams()\n const queryName = useParam.get(\"query\")\n\n   \n   useEffect(() => {\n   if(!queryName) return\n   fetchSearchMovie(queryName).then(film => setfilmListOfSearch(film)).catch(error => error);\n  },[queryName]);\n\n  return (\n    <>\n      <SearchFilmForm  />\n      {filmListOfSearch && <SearchMovieList listOfFilm={filmListOfSearch} />}\n    </>\n  );\n};\nexport default MoviesPage"],"names":["SearchFilmForm","useSearchParams","setSearchParams","onSubmit","e","preventDefault","form","currentTarget","query","elements","value","reset","className","css","type","name","SearchMovieList","listOfFilm","location","useLocation","map","film","to","id","state","from","title","useState","filmListOfSearch","setfilmListOfSearch","queryName","get","useEffect","fetchSearchMovie","then","catch","error"],"sourceRoot":""}